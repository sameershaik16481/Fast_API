"""init schema

Revision ID: 0d0e9a93cc80
Revises:
Create Date: 2025-08-18 19:51:48.136637

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0d0e9a93cc80"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("password", sa.String(), nullable=False))
    op.add_column("users", sa.Column("fullname", sa.String(), nullable=False))
    op.alter_column(
        "users",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "users",
        "email",
        existing_type=postgresql.CITEXT(),
        type_=sa.String(),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "phone",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(op.f("idx_users_email"), table_name="users")
    op.drop_constraint(op.f("users_email_key"), "users", type_="unique")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_unique_constraint(None, "users", ["phone"])
    op.drop_column("users", "full_name")
    op.drop_column("users", "password_hash")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "password_hash", sa.TEXT(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "users", type_="unique")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_unique_constraint(
        op.f("users_email_key"),
        "users",
        ["email"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_index(op.f("idx_users_email"), "users", ["email"], unique=False)
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "phone",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        nullable=True,
    )
    op.alter_column(
        "users",
        "email",
        existing_type=sa.String(),
        type_=postgresql.CITEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_column("users", "fullname")
    op.drop_column("users", "password")
    # ### end Alembic commands ###
